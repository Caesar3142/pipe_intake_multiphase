/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  11
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.001;


vertices
(
    (-150 -150 0) //0
    (150 -150 0) //1
    (800 -150 0) //2
    (-35.3553 -35.3553 0) //3
    (35.3553 -35.3553 0) //4
    (-22 -22 0) //5
    (22 -22 0) //6
    (-22 22 0) //7
    (22 22 0) //8
    (-35.3553 35.3553 0) //9
    (35.3553 35.3553 0) //10
    (-150 150 0) //11
    (150 150 0) //12
    (800 150 0) //13
    
    (-150 -150 75) //14
    (150 -150 75) //15
    (800 -150 75) //16
    (-35.3553 -35.3553 75) //17
    (35.3553 -35.3553 75) //18
    (-22 -22 75) //19
    (22 -22 75) //20
    (-22 22 75) //21
    (22 22 75) //22
    (-35.3553 35.3553 75) //23
    (35.3553 35.3553 75) //24
    (-150 150 75) //25
    (150 150 75) //26
    (800 150 75) //27
    
    (-150 -150 200) //28
    (150 -150 200) //29
    (800 -150 200) //30
    (-35.3553 -35.3553 200) //31
    (35.3553 -35.3553 200) //32
    (-35.3553 35.3553 200) //33
    (35.3553 35.3553 200) //34
    (-150 150 200) //35
    (150 150 200) //36
    (800 150 200) //37
);

edges
(
   arc 3 9 (-50 0 0)
   arc 9 10 (0 50 0)
   arc 10 4 (50 0 0)
   arc 4 3 (0 -50 0)
   
   arc 17 23 (-50 0 75)
   arc 23 24 (0 50 75)
   arc 24 18 (50 0 75)
   arc 18 17 (0 -50 75)
   
   arc 31 33 (-50 0 200)
   arc 33 34 (0 50 200)
   arc 34 32 (50 0 200)
   arc 32 31 (0 -50 200)
);

ri 8;
ro 20;
t 17;
y1 16;
y2 20;
x 50;

blocks
(
    hex (0 1 4 3 14 15 18 17) ($t $ro $y1) simpleGrading (1 0.333 0.333) //1
    hex (0 3 9 11 14 17 23 25) ($ro $t $y1) simpleGrading (0.333 1 0.333) //2
    hex (3 5 7 9 17 19 21 23) ($ri $t $y1) simpleGrading (1 1 0.333) //3
    hex (3 4 6 5 17 18 20 19) ($t $ri $y1) simpleGrading (1 1 0.333) //4
    hex (5 6 8 7 19 20 22 21) ($t $t $y1) simpleGrading (1 1 0.333) //5
    hex (6 4 10 8 20 18 24 22) ($ri $t $y1) simpleGrading (1 1 0.333) //6
    hex (4 1 12 10 18 15 26 24) ($ro $t $y1) simpleGrading (3 1 0.333) //7
    hex (7 8 10 9 21 22 24 23) ($t $ri $y1) simpleGrading (1 1 0.333) //8
    hex (9 10 12 11 23 24 26 25) ($t $ro $y1) simpleGrading (1 3 0.333) //9
    hex (1 2 13 12 15 16 27 26) ($x $t $y1) simpleGrading (1 1 0.333) //10
    
    hex (14 15 18 17 28 29 32 31) ($t $ro $y2) simpleGrading (1 0.333 3) //11
    hex (14 17 23 25 28 31 33 35) ($ro $t $y2) simpleGrading (0.333 1 3) //12    
    hex (18 15 26 24 32 29 36 34) ($ro $t $y2) simpleGrading (3 1 3) //13
    hex (23 24 26 25 33 34 36 35) ($t $ro $y2) simpleGrading (1 3 3) //14
    hex (15 16 27 26 29 30 37 36) ($x $t $y2) simpleGrading (1 1 3) //15
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (19 20 22 21)
            (17 18 20 19)
            (20 18 24 22)
            (21 22 24 23)
            (21 23 17 19)
        );
    }

   // pipe_wall
   // {
       // type wall;
       // faces
       // (
           // (9 23 24 10)
           // (4 18 24 10)            
           // (4 18 17 3)            
           // (3 17 23 9)

           // (23 33 34 24)
           // (24 34 32 18)
           // (18 32 31 17)
           // (17 31 33 23)
       // );
   // }

    side_wall
    {
        type wall;
        faces
        (
            (16 30 29 15)
            (15 29 28 14)
            (14 28 35 25)
            (25 35 36 26)
            (26 27 37 36)
            
            (2 16 15 1)
            (1 15 14 0)
            (0 14 25 11)
            (11 25 26 12)
            (12 26 27 13)

        );
    }

    bottom
    {
        type wall;
        faces
        (
            (0 1 4 3)
            (0 3 9 11)
            (3 5 7 9)
            (3 4 6 5)
            (5 6 8 7)
            (6 4 10 8)
            (4 1 12 10)
            (7 8 10 9)
            (9 10 12 11)
            (1 2 13 12)

        );
    }

    top
    {
        type patch;
        faces
        (
            (28 29 32 31)
            (28 31 33 35)
            (32 29 36 34)
            (33 34 36 35)
            (29 30 37 36)
       );
    }

    front
    {
        type patch;
        faces
        (
            (2 16 27 13)
	    (16 30 37 27)
        );
    }

);

// ***************************caesar_wiratama_2023************************** //
// ************************************************************************* //
